{"ast":null,"code":"import\"../styles/stylesheet.css\";import{useEffect,useState}from\"react\";import{useNavigate}from\"react-router-dom\";import{useUser}from\"../context/UserContext\";import{checkTokenExpiration}from\"../utils/tokenUtils\";import{getSecretsForUser,addSecretForUser}from\"../services/api\";import Spinner from\"../components/Spinner\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Secrets=()=>{const{userId,setUserId,token,setToken}=useUser();const[secret,setSecret]=useState('');const[listOfSecrets,setListOfSecrets]=useState([]);const navigate=useNavigate();const[error,setError]=useState('');const[loading,setLoading]=useState(true);useEffect(()=>{const storedUserId=localStorage.getItem('userId');const storedToken=localStorage.getItem('token');if(storedUserId&&storedToken){setUserId(storedUserId);setToken(storedToken);if(checkTokenExpiration()){logOutUser();}}else{navigate('/');}const interval=setInterval(()=>{if(checkTokenExpiration()){logOutUser();}},60000);return()=>clearInterval(interval);},[setUserId,setToken,navigate]);useEffect(()=>{const fetchSecrets=async()=>{try{if(userId&&token){const data=await getSecretsForUser(userId);const secrets=data.result.rows.map(row=>row.secret_text);setLoading(false);setListOfSecrets(secrets);}}catch(error){setLoading(false);console.log(error);}};fetchSecrets();},[secret,userId]);function logOutUser(){localStorage.removeItem('userId');localStorage.removeItem('token');setUserId('');setToken('');setLoading(true);navigate('/');}async function addSecret(event){event.preventDefault();if(!secret||secret.trim()===''){setError('Invalid input Secret cannot be empty or just spaces.');}else{setError('');}try{const data=await addSecretForUser(userId,secret);console.log(data);setListOfSecrets([...listOfSecrets,secret]);}catch(error){setError(error);console.log(error);}setSecret('');}return/*#__PURE__*/_jsxs(\"div\",{className:\"scrt-div\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"scrt-hdr-cont\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"scrt-hdr\",children:\"Add your secret here and keep it secure.\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"scrt-lst\",children:loading?/*#__PURE__*/_jsx(Spinner,{}):/*#__PURE__*/_jsx(\"ul\",{children:listOfSecrets.map((eachSecret,index)=>{return/*#__PURE__*/_jsx(\"li\",{className:\"lst-scrt\",children:eachSecret},index);})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"scrt-inpt-divs\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"scrt-inpt\",type:\"text\",placeholder:\"Type a secret\",value:secret,onChange:e=>setSecret(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{className:\"scrt-add\",onClick:addSecret,children:\"+\"})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{className:\"error-msg\",children:error})}),/*#__PURE__*/_jsx(\"div\",{className:\"logout-div\",children:/*#__PURE__*/_jsx(\"button\",{className:\"logout-btn\",onClick:logOutUser,children:\"Log Out\"})})]});};export default Secrets;","map":{"version":3,"names":["useEffect","useState","useNavigate","useUser","checkTokenExpiration","getSecretsForUser","addSecretForUser","Spinner","jsx","_jsx","jsxs","_jsxs","Secrets","userId","setUserId","token","setToken","secret","setSecret","listOfSecrets","setListOfSecrets","navigate","error","setError","loading","setLoading","storedUserId","localStorage","getItem","storedToken","logOutUser","interval","setInterval","clearInterval","fetchSecrets","data","secrets","result","rows","map","row","secret_text","console","log","removeItem","addSecret","event","preventDefault","trim","className","children","eachSecret","index","type","placeholder","value","onChange","e","target","required","onClick"],"sources":["C:/Users/Islom/OneDrive/Desktop/TopSecret/frontend/src/pages/Secrets.jsx"],"sourcesContent":["import \"../styles/stylesheet.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useUser } from \"../context/UserContext\";\r\nimport { checkTokenExpiration } from \"../utils/tokenUtils\";\r\nimport { getSecretsForUser, addSecretForUser } from \"../services/api\";\r\nimport Spinner from \"../components/Spinner\";\r\n\r\nconst Secrets = () => {\r\n    const { userId, setUserId, token, setToken } = useUser();\r\n    const [secret, setSecret] = useState('');\r\n    const [listOfSecrets, setListOfSecrets] = useState([]);\r\n    const navigate = useNavigate();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const storedUserId = localStorage.getItem('userId');\r\n        const storedToken = localStorage.getItem('token');\r\n        if(storedUserId && storedToken) {\r\n            setUserId(storedUserId);\r\n            setToken(storedToken);\r\n\r\n            if(checkTokenExpiration()) {\r\n                logOutUser();\r\n            } \r\n        } else {\r\n            navigate('/')\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            if (checkTokenExpiration()) {\r\n                logOutUser();\r\n            }\r\n        }, 60000);\r\n        return () => clearInterval(interval);\r\n\r\n    }, [setUserId, setToken, navigate]);\r\n\r\n    useEffect(() => {\r\n        const fetchSecrets = async () => {\r\n            try {\r\n                if(userId && token) {\r\n                    const data = await getSecretsForUser(userId);\r\n                    const secrets = data.result.rows.map(row => row.secret_text);\r\n                    setLoading(false);\r\n                    setListOfSecrets(secrets)\r\n                } \r\n            } catch(error) {\r\n                setLoading(false);\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetchSecrets();\r\n    }, [secret, userId]);\r\n\r\n    function logOutUser() {\r\n        localStorage.removeItem('userId');\r\n        localStorage.removeItem('token');\r\n        setUserId('');\r\n        setToken('');\r\n        setLoading(true);  \r\n        navigate('/');\r\n    }\r\n\r\n    async function addSecret(event) {\r\n        event.preventDefault();\r\n        if(!secret || secret.trim() === '') {\r\n            setError('Invalid input Secret cannot be empty or just spaces.')\r\n        } else {\r\n            setError('');\r\n        }\r\n        \r\n        try {\r\n            const data = await addSecretForUser(userId, secret);\r\n            console.log(data);\r\n            setListOfSecrets([...listOfSecrets, secret]);\r\n        } catch(error) {\r\n            setError(error);\r\n            console.log(error);\r\n        }\r\n        setSecret('');\r\n    }\r\n\r\n    return (\r\n        <div className=\"scrt-div\">\r\n            <div className=\"scrt-hdr-cont\">\r\n                <h2 className=\"scrt-hdr\">Add your secret here and keep it secure.</h2>\r\n            </div>\r\n            <div className=\"scrt-lst\">\r\n                {\r\n                    loading ?  ( <Spinner /> ) :\r\n                    <ul>\r\n                        {\r\n                            listOfSecrets.map((eachSecret, index) => {\r\n                                return <li key={index} className=\"lst-scrt\">{eachSecret}</li>\r\n                            })\r\n                        }\r\n                    </ul>\r\n                }\r\n            </div>\r\n            <div className=\"scrt-inpt-divs\">\r\n                <input className=\"scrt-inpt\" type=\"text\" placeholder=\"Type a secret\" value={secret} onChange={(e) => setSecret(e.target.value) } required/>\r\n                <button className=\"scrt-add\" onClick={addSecret}>+</button>\r\n            </div>\r\n            <div><p className=\"error-msg\">{error}</p></div>\r\n            <div className=\"logout-div\">\r\n                <button className=\"logout-btn\" onClick={logOutUser}>Log Out</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Secrets;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}