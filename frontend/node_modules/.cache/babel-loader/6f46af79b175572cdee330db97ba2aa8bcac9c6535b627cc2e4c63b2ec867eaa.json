{"ast":null,"code":"export const checkTokenExpiration=()=>{const token=localStorage.getItem('token');if(token){const decodedToken=JSON.parse(atob(token.split('.')[1]));const currentTime=Date.now()/1000;if(decodedToken.exp<currentTime){localStorage.removeItem('userId');localStorage.removeItem('token');return true;// Token expired\n}}return false;// Token not expired\n};","map":{"version":3,"names":["checkTokenExpiration","token","localStorage","getItem","decodedToken","JSON","parse","atob","split","currentTime","Date","now","exp","removeItem"],"sources":["C:/Users/Islom/OneDrive/Desktop/TopSecret/frontend/src/utils/tokenUtils.js"],"sourcesContent":["export const checkTokenExpiration = () => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n        const decodedToken = JSON.parse(atob(token.split('.')[1]));\r\n        const currentTime = Date.now() / 1000;\r\n        if (decodedToken.exp < currentTime) {\r\n            localStorage.removeItem('userId');\r\n            localStorage.removeItem('token');\r\n            return true; // Token expired\r\n        }\r\n    }\r\n    return false; // Token not expired\r\n};"],"mappings":"AAAA,MAAO,MAAM,CAAAA,oBAAoB,CAAGA,CAAA,GAAM,CACtC,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACP,KAAM,CAAAG,YAAY,CAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC1D,KAAM,CAAAC,WAAW,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAG,IAAI,CACrC,GAAIP,YAAY,CAACQ,GAAG,CAAGH,WAAW,CAAE,CAChCP,YAAY,CAACW,UAAU,CAAC,QAAQ,CAAC,CACjCX,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC,CAChC,MAAO,KAAI,CAAE;AACjB,CACJ,CACA,MAAO,MAAK,CAAE;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}