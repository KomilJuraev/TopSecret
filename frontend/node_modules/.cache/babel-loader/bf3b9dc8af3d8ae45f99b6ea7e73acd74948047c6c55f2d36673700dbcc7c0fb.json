{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Islom\\\\OneDrive\\\\Desktop\\\\TopSecret\\\\frontend\\\\src\\\\pages\\\\Secrets.jsx\",\n  _s = $RefreshSig$();\nimport \"../styles/stylesheet.css\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useUser } from \"../context/UserContext\";\nimport { checkTokenExpiration } from \"../utils/tokenUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Secrets = () => {\n  _s();\n  const {\n    userId,\n    setUserId,\n    token,\n    setToken\n  } = useUser();\n  const [secret, setSecret] = useState('');\n  const [listOfSecrets, setListOfSecrets] = useState([]);\n  const navigate = useNavigate();\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const storedUserId = localStorage.getItem('userId');\n    const storedToken = localStorage.getItem('token');\n    if (storedUserId && storedToken) {\n      setUserId(storedUserId);\n      setToken(storedToken);\n      if (checkTokenExpiration()) {\n        logOutUser();\n      }\n    } else {\n      navigate('/');\n    }\n    const interval = setInterval(() => {\n      if (checkTokenExpiration()) {\n        logOutUser();\n      }\n    }, 60000);\n    return () => clearInterval(interval);\n  }, [setUserId, setToken, navigate]);\n  useEffect(() => {\n    const fetchSecrets = async () => {\n      try {\n        if (userId && token) {\n          const data = await getSecretsForUser(userId);\n          const secrets = data.result.rows.map(row => row.secret_info);\n          setListOfSecrets(secrets);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchSecrets();\n  }, [secret, userId]);\n  function logOutUser() {\n    localStorage.removeItem('userId');\n    localStorage.removeItem('token');\n    setUserId('');\n    setToken('');\n    navigate('/');\n  }\n  async function addSecret(event) {\n    event.preventDefault();\n    if (!secret || secret.trim() === '') {\n      setError('Invalid input Secret cannot be empty or just spaces.');\n    } else {\n      setError('');\n    }\n    const requestBody = {\n      userId: userId,\n      secretInfo: secret\n    };\n    try {\n      const response = await fetch('http://localhost:5000/secrets', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      const data = await response.json();\n      console.log(data);\n      setListOfSecrets([...listOfSecrets, secret]);\n    } catch (error) {\n      setError(error);\n      console.log(error);\n    }\n    setSecret('');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scrt-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scrt-hdr-cont\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"scrt-hdr\",\n        children: \"Add your secret here and keep it secure.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scrt-lst\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: listOfSecrets.map((eachSecret, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"lst-scrt\",\n            children: eachSecret\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scrt-inpt-divs\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"scrt-inpt\",\n        type: \"text\",\n        placeholder: \"Type a secret\",\n        value: secret,\n        onChange: e => setSecret(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"scrt-add\",\n        onClick: addSecret,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-msg\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logout-div\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: logOutUser,\n        children: \"Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(Secrets, \"gHfCbxfqHYuHEUoj/CTx4U8/dMM=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c = Secrets;\nexport default Secrets;\nvar _c;\n$RefreshReg$(_c, \"Secrets\");","map":{"version":3,"names":["useEffect","useState","useNavigate","useUser","checkTokenExpiration","jsxDEV","_jsxDEV","Secrets","_s","userId","setUserId","token","setToken","secret","setSecret","listOfSecrets","setListOfSecrets","navigate","error","setError","storedUserId","localStorage","getItem","storedToken","logOutUser","interval","setInterval","clearInterval","fetchSecrets","data","getSecretsForUser","secrets","result","rows","map","row","secret_info","console","log","removeItem","addSecret","event","preventDefault","trim","requestBody","secretInfo","response","fetch","method","headers","body","JSON","stringify","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","eachSecret","index","type","placeholder","value","onChange","e","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Islom/OneDrive/Desktop/TopSecret/frontend/src/pages/Secrets.jsx"],"sourcesContent":["import \"../styles/stylesheet.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useUser } from \"../context/UserContext\";\r\nimport { checkTokenExpiration } from \"../utils/tokenUtils\";\r\n\r\nconst Secrets = () => {\r\n    const { userId, setUserId, token, setToken } = useUser();\r\n    const [secret, setSecret] = useState('');\r\n    const [listOfSecrets, setListOfSecrets] = useState([]);\r\n    const navigate = useNavigate();\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        const storedUserId = localStorage.getItem('userId');\r\n        const storedToken = localStorage.getItem('token');\r\n        if(storedUserId && storedToken) {\r\n            setUserId(storedUserId);\r\n            setToken(storedToken);\r\n\r\n            if(checkTokenExpiration()) {\r\n                logOutUser();\r\n            } \r\n        } else {\r\n            navigate('/')\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            if (checkTokenExpiration()) {\r\n                logOutUser();\r\n            }\r\n        }, 60000);\r\n        return () => clearInterval(interval);\r\n\r\n    }, [setUserId, setToken, navigate]);\r\n\r\n    useEffect(() => {\r\n        const fetchSecrets = async () => {\r\n            try {\r\n                if(userId && token) {\r\n                    const data = await getSecretsForUser(userId);\r\n                    const secrets = data.result.rows.map(row => row.secret_info);\r\n                    setListOfSecrets(secrets)\r\n                } \r\n            } catch(error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetchSecrets();\r\n    }, [secret, userId]);\r\n\r\n    function logOutUser() {\r\n        localStorage.removeItem('userId');\r\n        localStorage.removeItem('token');\r\n        setUserId('');\r\n        setToken('');\r\n        navigate('/');\r\n    }\r\n\r\n    async function addSecret(event) {\r\n        event.preventDefault();\r\n        if(!secret || secret.trim() === '') {\r\n            setError('Invalid input Secret cannot be empty or just spaces.')\r\n        } else {\r\n            setError('');\r\n        }\r\n        const requestBody = {\r\n            userId: userId, \r\n            secretInfo: secret \r\n        }\r\n        \r\n        try {\r\n            const response = await fetch('http://localhost:5000/secrets', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(requestBody)\r\n            }); \r\n            const data = await response.json();\r\n            console.log(data);\r\n            setListOfSecrets([...listOfSecrets, secret]);\r\n        } catch(error) {\r\n            setError(error);\r\n            console.log(error);\r\n        }\r\n        setSecret('');\r\n    }\r\n\r\n    return (\r\n        <div className=\"scrt-div\">\r\n            <div className=\"scrt-hdr-cont\">\r\n                <h2 className=\"scrt-hdr\">Add your secret here and keep it secure.</h2>\r\n            </div>\r\n            <div className=\"scrt-lst\">\r\n                <ul>\r\n                    {\r\n                        listOfSecrets.map((eachSecret, index) => {\r\n                            return <li key={index} className=\"lst-scrt\">{eachSecret}</li>\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n            <div className=\"scrt-inpt-divs\">\r\n                <input className=\"scrt-inpt\" type=\"text\" placeholder=\"Type a secret\" value={secret} onChange={(e) => setSecret(e.target.value) } required/>\r\n                <button className=\"scrt-add\" onClick={addSecret}>+</button>\r\n            </div>\r\n            <div><p className=\"error-msg\">{error}</p></div>\r\n            <div className=\"logout-div\">\r\n                <button className=\"logout-btn\" onClick={logOutUser}>Log Out</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Secrets;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}