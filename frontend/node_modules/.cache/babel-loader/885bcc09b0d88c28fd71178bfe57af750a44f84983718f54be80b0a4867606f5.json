{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Islom\\\\OneDrive\\\\Desktop\\\\TopSecret\\\\frontend\\\\src\\\\pages\\\\Secrets.jsx\",\n  _s = $RefreshSig$();\nimport \"../styles/stylesheet.css\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useUser } from \"../context/UserContext\";\nimport { checkTokenExpiration } from \"../utils/tokenUtils\";\nimport { getSecretsForUser, addSecretForUser } from \"../services/api\";\nimport Spinner from \"../components/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Secrets = () => {\n  _s();\n  const {\n    userId,\n    setUserId,\n    token,\n    setToken\n  } = useUser();\n  const [secret, setSecret] = useState('');\n  const [listOfSecrets, setListOfSecrets] = useState([]);\n  const navigate = useNavigate();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const storedUserId = localStorage.getItem('userId');\n    const storedToken = localStorage.getItem('token');\n    if (storedUserId && storedToken) {\n      setUserId(storedUserId);\n      setToken(storedToken);\n      if (checkTokenExpiration()) {\n        logOutUser();\n      }\n    } else {\n      navigate('/');\n    }\n    const interval = setInterval(() => {\n      if (checkTokenExpiration()) {\n        logOutUser();\n      }\n    }, 60000);\n    return () => clearInterval(interval);\n  }, [setUserId, setToken, navigate]);\n  useEffect(() => {\n    const fetchSecrets = async () => {\n      try {\n        if (userId && token) {\n          const data = await getSecretsForUser(userId);\n          const secrets = data.result.rows.map(row => row.secret_info);\n          setLoading(true);\n          setListOfSecrets(secrets);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchSecrets();\n  }, [secret, userId]);\n  function logOutUser() {\n    localStorage.removeItem('userId');\n    localStorage.removeItem('token');\n    setUserId('');\n    setToken('');\n    setLoading(false);\n    navigate('/');\n  }\n  async function addSecret(event) {\n    event.preventDefault();\n    if (!secret || secret.trim() === '') {\n      setError('Invalid input Secret cannot be empty or just spaces.');\n    } else {\n      setError('');\n    }\n    try {\n      const data = await addSecretForUser(userId, secret);\n      console.log(data);\n      setListOfSecrets([...listOfSecrets, secret]);\n    } catch (error) {\n      setError(error);\n      console.log(error);\n    }\n    setSecret('');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scrt-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scrt-hdr-cont\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"scrt-hdr\",\n        children: \"Add your secret here and keep it secure.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scrt-lst\",\n      children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 34\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: listOfSecrets.map((eachSecret, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"lst-scrt\",\n            children: eachSecret\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 40\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scrt-inpt-divs\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"scrt-inpt\",\n        type: \"text\",\n        placeholder: \"Type a secret\",\n        value: secret,\n        onChange: e => setSecret(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"scrt-add\",\n        onClick: addSecret,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-msg\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logout-div\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: logOutUser,\n        children: \"Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s(Secrets, \"iwwPUo1Ra1Ldd9O0RzJzFjKd1q0=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c = Secrets;\nexport default Secrets;\nvar _c;\n$RefreshReg$(_c, \"Secrets\");","map":{"version":3,"names":["useEffect","useState","useNavigate","useUser","checkTokenExpiration","getSecretsForUser","addSecretForUser","Spinner","jsxDEV","_jsxDEV","Secrets","_s","userId","setUserId","token","setToken","secret","setSecret","listOfSecrets","setListOfSecrets","navigate","error","setError","loading","setLoading","storedUserId","localStorage","getItem","storedToken","logOutUser","interval","setInterval","clearInterval","fetchSecrets","data","secrets","result","rows","map","row","secret_info","console","log","removeItem","addSecret","event","preventDefault","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","eachSecret","index","type","placeholder","value","onChange","e","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Islom/OneDrive/Desktop/TopSecret/frontend/src/pages/Secrets.jsx"],"sourcesContent":["import \"../styles/stylesheet.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useUser } from \"../context/UserContext\";\r\nimport { checkTokenExpiration } from \"../utils/tokenUtils\";\r\nimport { getSecretsForUser, addSecretForUser } from \"../services/api\";\r\nimport Spinner from \"../components/Spinner\";\r\n\r\nconst Secrets = () => {\r\n    const { userId, setUserId, token, setToken } = useUser();\r\n    const [secret, setSecret] = useState('');\r\n    const [listOfSecrets, setListOfSecrets] = useState([]);\r\n    const navigate = useNavigate();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const storedUserId = localStorage.getItem('userId');\r\n        const storedToken = localStorage.getItem('token');\r\n        if(storedUserId && storedToken) {\r\n            setUserId(storedUserId);\r\n            setToken(storedToken);\r\n\r\n            if(checkTokenExpiration()) {\r\n                logOutUser();\r\n            } \r\n        } else {\r\n            navigate('/')\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            if (checkTokenExpiration()) {\r\n                logOutUser();\r\n            }\r\n        }, 60000);\r\n        return () => clearInterval(interval);\r\n\r\n    }, [setUserId, setToken, navigate]);\r\n\r\n    useEffect(() => {\r\n        const fetchSecrets = async () => {\r\n            try {\r\n                if(userId && token) {\r\n                    const data = await getSecretsForUser(userId);\r\n                    const secrets = data.result.rows.map(row => row.secret_info);\r\n                    setLoading(true);\r\n                    setListOfSecrets(secrets)\r\n                } \r\n            } catch(error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetchSecrets();\r\n    }, [secret, userId]);\r\n\r\n    function logOutUser() {\r\n        localStorage.removeItem('userId');\r\n        localStorage.removeItem('token');\r\n        setUserId('');\r\n        setToken('');\r\n        setLoading(false);\r\n        navigate('/');\r\n    }\r\n\r\n    async function addSecret(event) {\r\n        event.preventDefault();\r\n        if(!secret || secret.trim() === '') {\r\n            setError('Invalid input Secret cannot be empty or just spaces.')\r\n        } else {\r\n            setError('');\r\n        }\r\n        \r\n        try {\r\n            const data = await addSecretForUser(userId, secret);\r\n            console.log(data);\r\n            setListOfSecrets([...listOfSecrets, secret]);\r\n        } catch(error) {\r\n            setError(error);\r\n            console.log(error);\r\n        }\r\n        setSecret('');\r\n    }\r\n\r\n    return (\r\n        <div className=\"scrt-div\">\r\n            <div className=\"scrt-hdr-cont\">\r\n                <h2 className=\"scrt-hdr\">Add your secret here and keep it secure.</h2>\r\n            </div>\r\n            <div className=\"scrt-lst\">\r\n                {\r\n                    loading ?  ( <Spinner /> ) :\r\n                    <ul>\r\n                        {\r\n                            listOfSecrets.map((eachSecret, index) => {\r\n                                return <li key={index} className=\"lst-scrt\">{eachSecret}</li>\r\n                            })\r\n                        }\r\n                    </ul>\r\n                }\r\n            </div>\r\n            <div className=\"scrt-inpt-divs\">\r\n                <input className=\"scrt-inpt\" type=\"text\" placeholder=\"Type a secret\" value={secret} onChange={(e) => setSecret(e.target.value) } required/>\r\n                <button className=\"scrt-add\" onClick={addSecret}>+</button>\r\n            </div>\r\n            <div><p className=\"error-msg\">{error}</p></div>\r\n            <div className=\"logout-div\">\r\n                <button className=\"logout-btn\" onClick={logOutUser}>Log Out</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Secrets;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}