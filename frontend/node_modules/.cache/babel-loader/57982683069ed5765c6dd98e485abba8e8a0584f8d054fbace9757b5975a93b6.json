{"ast":null,"code":"export const checkTokenExpiration = () => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    const decodedToken = JSON.parse(atob(token.split('.')[1]));\n    const currentTime = Date.now() / 1000;\n    if (decodedToken.exp < currentTime) {\n      localStorage.removeItem('userId');\n      localStorage.removeItem('token');\n      return true; // Token expired\n    }\n  }\n  return false; // Token not expired\n};","map":{"version":3,"names":["checkTokenExpiration","token","localStorage","getItem","decodedToken","JSON","parse","atob","split","currentTime","Date","now","exp","removeItem"],"sources":["C:/Users/Islom/OneDrive/Desktop/TopSecret/frontend/src/utils/tokenUtils.js"],"sourcesContent":["export const checkTokenExpiration = () => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n        const decodedToken = JSON.parse(atob(token.split('.')[1]));\r\n        const currentTime = Date.now() / 1000;\r\n        if (decodedToken.exp < currentTime) {\r\n            localStorage.removeItem('userId');\r\n            localStorage.removeItem('token');\r\n            return true; // Token expired\r\n        }\r\n    }\r\n    return false; // Token not expired\r\n};"],"mappings":"AAAA,OAAO,MAAMA,oBAAoB,GAAGA,CAAA,KAAM;EACtC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACP,MAAMG,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,MAAMC,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI;IACrC,IAAIP,YAAY,CAACQ,GAAG,GAAGH,WAAW,EAAE;MAChCP,YAAY,CAACW,UAAU,CAAC,QAAQ,CAAC;MACjCX,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC;MAChC,OAAO,IAAI,CAAC,CAAC;IACjB;EACJ;EACA,OAAO,KAAK,CAAC,CAAC;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}